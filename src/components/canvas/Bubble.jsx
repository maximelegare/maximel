/* eslint-disable @typescript-eslint/ban-ts-comment */
// @ts-nocheck

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 bubble.glb
*/

import React, { useRef } from "react";
import { useEnvironment, useGLTF } from "@react-three/drei";


import { useYuka } from "~/hooks/useYoka";

export const Bubble = (props, path, position) => {
  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
  const [ref] = useYuka({ position });
  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment

  const { nodes, materials } = useGLTF("/bubble.glb");

  if(!ref) return <></>


  // const envMap = useEnvironment({files:"/bubble_reflection.hdr"})

  return (
    <group {...props} dispose={null}>
      <mesh
        
        ref={ref}
        geometry={nodes.Sphere.geometry}
        scale={4}
        material={materials["Material.001"]}
      />
      <pointLight position={[0, 0, 0]} intensity={20} color="#fff" />
      {/* <ambientLight intensity={100000} color="#ededde" /> */}
    </group>
  );
};

useGLTF.preload("/bubble.glb");
